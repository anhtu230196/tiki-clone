{"ast":null,"code":"import { categoryConstants } from \"../actions/constants\";\nconst initialState = {\n  categories: [],\n  loading: false,\n  error: null\n};\n\nconst buildNewCategories = (parentId, categories, category) => {\n  let myCategories = [];\n\n  for (let cat of categories) {\n    if (cat._id == parentId) {\n      myCategories.push({ ...cat,\n        children: cat.children && cat.children.length > 0 ? buildNewCategories(parentId, [...cat.children, {\n          _id: category._id,\n          name: category.name,\n          slug: category.slug,\n          parentId: category.parentId,\n          children: category.children\n        }], category) : []\n      });\n    } else {\n      myCategories.push({ ...cat,\n        children: cat.children && cat.children.length > 0 ? buildNewCategories(parentId, cat.children, category) : []\n      });\n    }\n  }\n\n  return myCategories;\n};\n\nconst categoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case categoryConstants.GET_ALL_CATEGORIES_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\n      return { ...state,\n        loading: false,\n        categories: action.payload.categories\n      };\n\n    case categoryConstants.GET_ALL_CATEGORIES_FAILED:\n      return { ...state,\n        loading: false,\n        error: action.payload.error\n      };\n\n    case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\n      const updatedCategories = buildNewCategories(action.payload.category.parentId, state.categories, action.payload.category);\n      return { ...state,\n        loading: false,\n        categories: updatedCategories\n      };\n\n    case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n      return { ...state,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default categoryReducer;","map":{"version":3,"sources":["C:/Users/Admin/Documents/tiki/admin-app/src/reducers/category.reducer.js"],"names":["categoryConstants","initialState","categories","loading","error","buildNewCategories","parentId","category","myCategories","cat","_id","push","children","length","name","slug","categoryReducer","state","action","type","GET_ALL_CATEGORIES_REQUEST","GET_ALL_CATEGORIES_SUCCESS","payload","GET_ALL_CATEGORIES_FAILED","ADD_NEW_CATEGORY_REQUEST","ADD_NEW_CATEGORY_SUCCESS","updatedCategories","ADD_NEW_CATEGORY_FAILURE"],"mappings":"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","sourcesContent":["import { categoryConstants } from \"../actions/constants\"\r\n\r\nconst initialState = {\r\n    categories: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst buildNewCategories = (parentId, categories, category) => {\r\n    let myCategories = [];\r\n    for (let cat of categories) {\r\n        if (cat._id == parentId) {\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children && cat.children.length > 0 ? buildNewCategories(parentId, [...cat.children, {\r\n                    _id: category._id,\r\n                    name: category.name,\r\n                    slug: category.slug,\r\n                    parentId: category.parentId,\r\n                    children: category.children\r\n                }], category) : []\r\n            })\r\n        } else {\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children && cat.children.length > 0 ? buildNewCategories(parentId, cat.children, category) : []\r\n            })\r\n        }\r\n    }\r\n    return myCategories\r\n}\r\n\r\nconst categoryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case categoryConstants.GET_ALL_CATEGORIES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                categories: action.payload.categories\r\n            }\r\n        case categoryConstants.GET_ALL_CATEGORIES_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n        case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\r\n            const updatedCategories = buildNewCategories(action.payload.category.parentId, state.categories, action.payload.category)\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                categories: updatedCategories\r\n            }\r\n        case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport default categoryReducer"]},"metadata":{},"sourceType":"module"}