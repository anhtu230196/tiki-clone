{"ast":null,"code":"import axiosInstance from \"../helpers/axios\";\nimport { authConstants } from \"./constants\";\nexport const login = user => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axiosInstance.post(`/admin/signin`, user);\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/Admin/Documents/tiki/admin-app/src/actions/auth.action.js"],"names":["axiosInstance","authConstants","login","user","dispatch","type","LOGIN_REQUEST","res","post","status","token","data","localStorage","setItem","LOGIN_SUCCESS","payload","LOGIN_FAILURE","error"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,kBAA1B;AACA,SAASC,aAAT,QAA8B,aAA9B;AAEA,OAAO,MAAMC,KAAK,GAAIC,IAAD,IAAU;AAC3B,SAAO,MAAMC,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,aAAa,CAACK;AAAtB,KAAD,CAAR;AACA,UAAMC,GAAG,GAAG,MAAMP,aAAa,CAACQ,IAAd,CAAoB,eAApB,EAAoCL,IAApC,CAAlB;;AACA,QAAII,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACpB,YAAM;AAAEC,QAAAA,KAAF;AAASP,QAAAA;AAAT,UAAkBI,GAAG,CAACI,IAA5B;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACAN,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEJ,aAAa,CAACa,aADf;AAELC,QAAAA,OAAO,EAAE;AAAEL,UAAAA,KAAF;AAASP,UAAAA;AAAT;AAFJ,OAAD,CAAR;AAIH,KAPD,MAOO;AACH,UAAII,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACpBL,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEJ,aAAa,CAACe,aADf;AAELD,UAAAA,OAAO,EAAE;AAAEE,YAAAA,KAAK,EAAEV,GAAG,CAACI,IAAJ,CAASM;AAAlB;AAFJ,SAAD,CAAR;AAIH;AACJ;AACJ,GAlBD;AAmBH,CApBM","sourcesContent":["import axiosInstance from \"../helpers/axios\"\r\nimport { authConstants } from \"./constants\"\r\n\r\nexport const login = (user) => {\r\n    return async dispatch => {\r\n        dispatch({ type: authConstants.LOGIN_REQUEST })\r\n        const res = await axiosInstance.post(`/admin/signin`, user)\r\n        if (res.status === 200) {\r\n            const { token, user } = res.data\r\n            localStorage.setItem('token', token)\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: { token, user }\r\n            })\r\n        } else {\r\n            if (res.status === 400) {\r\n                dispatch({\r\n                    type: authConstants.LOGIN_FAILURE,\r\n                    payload: { error: res.data.error }\r\n                })\r\n            }\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}