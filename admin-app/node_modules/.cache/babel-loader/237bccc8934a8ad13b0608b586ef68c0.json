{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\tiki\\\\admin-app\\\\src\\\\container\\\\Category\\\\Category.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Col, Container, Modal, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addCategory, getAllCategory } from '../../actions/category.action';\nimport Layout from '../../components/Layout/Layout';\nimport Input from '../../components/UI/Input/Input';\nimport MyModal from '../../components/UI/Modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Category() {\n  _s();\n\n  const category = useSelector(state => state.category);\n  const [show, setShow] = useState(false);\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const dispatch = useDispatch();\n\n  const renderCategories = categories => {\n    let myCategories = [];\n    categories.forEach(category => {\n      myCategories.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [category.name, category.children.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: renderCategories(category.children)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 55\n        }, this)]\n      }, category.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this));\n    });\n    return myCategories;\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  const handleClose = () => {\n    const form = new FormData();\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('categoryImage', categoryImage);\n    dispatch(addCategory(form));\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleShow,\n            children: \"Add New Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: renderCategories(category.categories)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      modalTitle: \"Add Category\",\n      show: show,\n      handleClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: categoryName,\n        placeholder: \"Category Name\",\n        onChange: e => setCategoryName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        value: parentCategoryId,\n        onChange: e => setParentCategoryId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"select category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.name\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"categoryImage\",\n        onChange: handleCategoryImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Category, \"n5WqoeKGtkpDxQ7qrwNV3LsVnwE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/tiki/admin-app/src/container/Category/Category.jsx"],"names":["React","useEffect","useState","Button","Col","Container","Modal","Row","useDispatch","useSelector","addCategory","getAllCategory","Layout","Input","MyModal","Category","category","state","show","setShow","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","dispatch","renderCategories","categories","myCategories","forEach","push","name","children","length","createCategoryList","options","value","_id","handleCategoryImage","e","target","files","handleClose","form","FormData","append","handleShow","map","option"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Modal, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addCategory, getAllCategory } from '../../actions/category.action'\r\nimport Layout from '../../components/Layout/Layout'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport MyModal from '../../components/UI/Modal/Modal'\r\n\r\nfunction Category() {\r\n    const category = useSelector(state => state.category)\r\n    const [show, setShow] = useState(false);\r\n    const [categoryName, setCategoryName] = useState('')\r\n    const [parentCategoryId, setParentCategoryId] = useState('')\r\n    const [categoryImage, setCategoryImage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const renderCategories = (categories) => {\r\n        let myCategories = []\r\n        categories.forEach(category => {\r\n            myCategories.push(\r\n                <li key={category.name}>\r\n                    {category.name}\r\n                    {category.children.length > 0 && (<ul>{renderCategories(category.children)}</ul>)}\r\n                </li>\r\n            )\r\n        });\r\n        return myCategories\r\n    }\r\n\r\n    const createCategoryList = (categories, options = []) => {\r\n        for (let category of categories) {\r\n            options.push({ value: category._id, name: category.name })\r\n            if (category.children.length > 0) {\r\n                createCategoryList(category.children, options)\r\n            }\r\n        }\r\n        return options\r\n    }\r\n\r\n    const handleCategoryImage = (e) => {\r\n        setCategoryImage(e.target.files[0])\r\n    }\r\n\r\n    const handleClose = () => {\r\n        const form = new FormData()\r\n        form.append('name', categoryName)\r\n        form.append('parentId', parentCategoryId)\r\n        form.append('categoryImage', categoryImage)\r\n        dispatch(addCategory(form))\r\n        setShow(false)\r\n    };\r\n    const handleShow = () => setShow(true);\r\n    return (\r\n        <Layout>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <h3>Category</h3>\r\n                        <Button variant=\"primary\" onClick={handleShow}>\r\n                            Add New Category\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        {renderCategories(category.categories)}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            <MyModal\r\n                modalTitle=\"Add Category\"\r\n                show={show}\r\n                handleClose={handleClose}\r\n            >\r\n                <Input\r\n                    value={categoryName}\r\n                    placeholder={\"Category Name\"}\r\n                    onChange={e => setCategoryName(e.target.value)}\r\n                />\r\n\r\n                <select\r\n                    className=\"form-control\"\r\n                    value={parentCategoryId}\r\n                    onChange={(e) => setParentCategoryId(e.target.value)}\r\n                >\r\n                    <option value=\"\">select category</option>\r\n                    {\r\n                        createCategoryList(category.categories).map(option =>\r\n                            <option key={option.value} value={option.value}>{option.name}</option>)\r\n                    }\r\n                </select>\r\n\r\n                <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} />\r\n            </MyModal>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Category\r\n"]},"metadata":{},"sourceType":"module"}