{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\tiki\\\\admin-app\\\\src\\\\container\\\\Products\\\\Products.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport Layout from '../../components/Layout/Layout';\nimport Input from '../../components/UI/Input/Input';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Products() {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [productPictures, setProductPictures] = useState([]);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add New Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: name,\n          label: \"Product Name:\",\n          placeholder: \"Product Name\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: quantity,\n          label: \"Quantity:\",\n          placeholder: \"Quantity: number\",\n          onChange: e => setQuantity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: price,\n          label: \"Price:\",\n          placeholder: \"Price: number\",\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: description,\n          label: \"Description:\",\n          placeholder: \".....\",\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"select category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.name\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Products, \"NEcCTjVJrFrx1gciaNrsoo3Vet4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/tiki/admin-app/src/container/Products/Products.jsx"],"names":["React","useState","Button","Modal","Layout","Input","useDispatch","useSelector","Products","show","setShow","dispatch","name","setName","quantity","setQuantity","price","setPrice","description","setDescription","category","setCategory","productPictures","setProductPictures","handleClose","createCategoryList","categories","options","push","value","_id","children","length","e","target","map","option"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport Layout from '../../components/Layout/Layout'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nfunction Products() {\r\n    const [show, setShow] = useState(false);\r\n    const dispatch = useDispatch()\r\n\r\n    const [name, setName] = useState('');\r\n    const [quantity, setQuantity] = useState('');\r\n    const [price, setPrice] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [productPictures, setProductPictures] = useState([])\r\n\r\n    const handleClose = () => {\r\n        setShow(false)\r\n    };\r\n\r\n    const createCategoryList = (categories, options = []) => {\r\n        for (let category of categories) {\r\n            options.push({ value: category._id, name: category.name })\r\n            if (category.children.length > 0) {\r\n                createCategoryList(category.children, options)\r\n            }\r\n        }\r\n        return options\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add New Category</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Input\r\n                        value={name}\r\n                        label=\"Product Name:\"\r\n                        placeholder={\"Product Name\"}\r\n                        onChange={e => setName(e.target.value)}\r\n                    />\r\n\r\n                    <Input\r\n                        value={quantity}\r\n                        label=\"Quantity:\"\r\n                        placeholder={\"Quantity: number\"}\r\n                        onChange={e => setQuantity(e.target.value)}\r\n                    />\r\n\r\n                    <Input\r\n                        value={price}\r\n                        label=\"Price:\"\r\n                        placeholder={\"Price: number\"}\r\n                        onChange={e => setPrice(e.target.value)}\r\n                    />\r\n\r\n                    <Input\r\n                        value={description}\r\n                        label=\"Description:\"\r\n                        placeholder={\".....\"}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                    />\r\n\r\n                    <select\r\n                        className=\"form-control\"\r\n                        value={category}\r\n                        onChange={(e) => setCategory(e.target.value)}\r\n                    >\r\n                        <option value=\"\">select category</option>\r\n                        {\r\n                            createCategoryList(category.categories).map(option =>\r\n                                <option key={option.value} value={option.value}>{option.name}</option>)\r\n                        }\r\n                    </select>\r\n\r\n                    {/* <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} /> */}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Save\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Products\r\n"]},"metadata":{},"sourceType":"module"}